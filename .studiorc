#!/bin/bash

hab pkg install chef/studio-common >/dev/null
source "$(hab pkg path chef/studio-common)/bin/studio-common"

install_if_missing core/curl curl

eval "$(curl -s -L https://gist.githubusercontent.com/lancewf/3117853c8c5a04c7b01bac737887a30c/raw/375644621d44f2d638a4e3ab9cc2cbfb1b3d41d5/hab_helpers.sh)"
source <(curl -s https://gist.githubusercontent.com/lancewf/3117853c8c5a04c7b01bac737887a30c/raw/375644621d44f2d638a4e3ab9cc2cbfb1b3d41d5/hab_helpers.sh)

eval "$(curl -s -L https://gist.githubusercontent.com/lancewf/584ca17c7b50cfc859e7cf544c1a67e8/raw/5090e812736071d77e31ed568cbf6ecbd439f6bf/hab_service_helper.sh)"
source <(curl -s https://gist.githubusercontent.com/lancewf/584ca17c7b50cfc859e7cf544c1a67e8/raw/5090e812736071d77e31ed568cbf6ecbd439f6bf/hab_service_helper.sh)

export REDIS_PORT=6379;
export PORT=8080;
export SERVICE_NAME="requestbin"

echo "Run 'start' to start the service"

function get_binds() {
  echo "--bind redis:redis.default"
}

function start_binds() {
  start_redis
}

function create_config() {
  mkdir -p /hab/user/requestbin/config/
  printf "[http.listen]\n host = \"0.0.0.0\"\n port = $PORT\n local_only=false\n\n" > /hab/user/$SERVICE_NAME/config/user.toml
}

function start_redis() {
  install_if_missing core/busybox-static netstat;
  netstat -an | grep $REDIS_PORT | grep LISTEN >/dev/null 2>/dev/null
  if [ $? == 0 ]; then
    echo "redis is already running";
    return;
  fi

  mkdir -p /hab/user/redis/config/

  printf "port = $REDIS_PORT\n" > /hab/user/redis/config/user.toml

  hab svc load lancewf/redis

  wait_or_fail_for_port_to_listen $REDIS_PORT
}
